[tool.coverage.run]
omit = "*/tests/*"
plugins = ["django_coverage_plugin"]

[tool.django-stubs]
django_settings_module = "jotlet.settings"

[tool.djlint]
custom_blocks = "element,slot,setvar"
format_attribute_template_tags = true
format_css = false
format_js = false
ignore = "H016"
max_line_length = 118
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.mypy]
disable_error_code = ["attr-defined"]
exclude = ["migrations"]
plugins = ["mypy_django_plugin.main"]
python_version = "3.12"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "allauth.*",
    "axes.*",
    "cacheops.*",
    "channels.*",
    "crispy_bootstrap5.*",
    "crispy_forms.*",
    "debug_toolbar",
    "django_cleanup.*",
    "django_redis",
    "environ",
    "huey_monitor.*",
    "pytest_lazy_fixtures.*",
    "sorl.*",
    "storages.backends.*",
    "tree_queries.*",
]

[tool.poetry]
name = "jotlet"
version = "1.14.1"
description = ""
authors = ["Oscar Siles Br√ºgge <siles.oscar@gmail.com>"]
license = "GPL-3.0-or-later"
package-mode = false

[tool.poetry.dependencies]
boto3 = "^1.34.141"
channels = "^4.1.0"
channels-redis = "^4.2.0"
crispy-bootstrap5 = "^2024.2"
Django = { extras = ["argon2"], version = "^5.0.6" }
django-allauth = { extras = ["socialaccount"], version = "^0.63.3" }
django-anymail = { extras = ["mailgun", "sendgrid"], version = "^10.3" }
django-auto-prefetch = "^1.8.0"
django-axes = { extras = ["ipware"], version = "^6.5.0" }
django-cacheops = "^7.0.2"
django-cleanup = "^8.1.0"
django-cors-headers = "^4.3.1"
django-csp = "^3.8"
django-environ = "^0.11.2"
django-filter = "^24.2"
django-htmx = "^1.17.3"
django-huey-email-backend = "^0.1.1"
django-huey-monitor = "^0.9.0"
django-redis = "^5.4.0"
django-storages = "^1.14.3"
django-tree-queries = "^0.19.0"
gunicorn = "^22.0.0"
httpx = "^0.27.0"
huey = "^2.5.1"
Pillow = "^10.3.0"
psycopg = { extras = ["binary"], version = "^3.1.19" }
python = ">=3.10,<4.0.0"
redis = { extras = ["hiredis"], version = "^5.0.6" }
sentry-sdk = "^2.5.1"
sorl-thumbnail = "^12.10.0"
tomli = "^2.0.1"
uvicorn = { extras = ["standard"], version = "^0.30.1" }
uvicorn-worker = "^0.2.0"
whitenoise = { extras = ["brotli"], version = "^6.6.0" }

[tool.poetry.group.dev.dependencies]
coverage = { extras = ["toml"], version = "^7.5.3" }
django-coverage-plugin = "^3.1.0"
django-debug-toolbar = "^4.4.2"
django-debug-toolbar-template-profiler = "^2.1.0"
django-filter-stubs = "^0.1.3"
django-stubs = { extras = ["compatible-mypy"], version = "^5.0.2" }
djlint = "^1.34.1"
huey-stubs = "^0.0.2"
pytest-cov = "^5.0.0"
ruff = "^0.4.8"
types-factory-boy = "^0.4.1"
types-pillow = "^10.2.0.20240520"

[tool.poetry.group.test.dependencies]
daphne = "^4.1.2"
factory-boy = "^3.3.0"
freezegun = "^1.5.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.5"
pytest-django = "^4.8.0"
pytest-factoryboy = "^2.7.0"
pytest-lazy-fixtures = "^1.0.7"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.6.1"

[tool.pyright]
ignore = ["*"]

[tool.pytest.ini_options]
addopts = "--cov=jotlet --cov-report xml:cov.xml --cov-report html:htmlcov"
asyncio_mode = "auto"

[tool.ruff]
exclude = ["manage.py", "**/migrations/*.py"]
line-length = 118
target-version = "py312"

[tool.ruff.format]
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",
    "EXE",
    "T10",
    "TD",
    "TRIO",
    # Individual Rules
    "ARG002",
    "ARG003",
    "COM812",
    "COM819",
    "D100",   # ignore missing docs
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D203",
    "D205",
    "D212",
    "D400",
    "D401",
    "D415",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "RUF012",
    "FIX002",
    "TRY003",
    "W191",
]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.flake8-self]
ignore-names = ["_meta"]

[tool.ruff.lint.per-file-ignores]
"**/management/commands/*.py" = ["A003"]
"**/models.py" = ["A003"]
"**/signals.py" = ["ARG001"]
"**/tests/*.py" = ["PLR0913", "S101", "SLF001"]

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
