# Generated by Django 4.2.1 on 2023-05-09 21:57

import uuid

from django.db import migrations, models


def gen_uuid(apps, schema_editor):
    tables = [
        "boardpreferences",
        "topic",
        "post",
        "reaction",
        "additionaldata",
        "image",
    ]
    for table in tables:
        Model = apps.get_model("boards", table)
        if table == "post":
            rows = Model.objects.order_by("created_at").all()
        else:
            rows = Model.objects.all()
        for row in rows:
            if table not in ["additionaldata", "image"]:
                while True:
                    row.uuid = uuid.uuid4()
                    if not Model.objects.filter(uuid=row.uuid).exists():
                        break

            if table == "boardpreferences":
                Board = apps.get_model("boards", "board")
                row.board_uuid = Board.objects.get(id=row.board_id).uuid

            elif table == "topic":
                Board = apps.get_model("boards", "board")
                row.board_uuid = Board.objects.get(id=row.board_id).uuid

            elif table == "post":
                Topic = apps.get_model("boards", "topic")
                row.topic_uuid = Topic.objects.get(id=row.topic_id).uuid
                if row.parent_id is None:
                    row.parent_uuid = None
                else:
                    row.parent_uuid = Model.objects.get(id=row.parent_id).uuid

            elif table == "reaction":
                Post = apps.get_model("boards", "post")
                row.post_uuid = Post.objects.get(id=row.post_id).uuid

            elif table == "additionaldata":
                Post = apps.get_model("boards", "post")
                row.post_uuid = Post.objects.get(id=row.post_id).uuid

            elif table == "image":
                if row.board_id is None:
                    row.board_uuid = None
                else:
                    Board = apps.get_model("boards", "board")
                    row.board_uuid = Board.objects.get(id=row.board_id).uuid
                if row.post_id is None:
                    row.post_uuid = None
                else:
                    Post = apps.get_model("boards", "post")
                    row.post_uuid = Post.objects.get(id=row.post_id).uuid

            row.save()


class Migration(migrations.Migration):
    dependencies = [
        ("boards", "0063_alter_historicaladditionaldata_history_id_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="boardpreferences",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="boardpreferences",
            name="board_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="topic",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="topic",
            name="board_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="post",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="post",
            name="parent_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="post",
            name="topic_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="additionaldata",
            name="post_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="reaction",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="reaction",
            name="post_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="image",
            name="post_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name="image",
            name="board_uuid",
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.RunPython(gen_uuid, reverse_code=migrations.RunPython.noop),
    ]
