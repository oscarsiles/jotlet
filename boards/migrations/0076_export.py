# Generated by Django 4.2.7 on 2023-11-27 11:42

import auto_prefetch
import boards.utils
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import jotlet.mixins.refresh_from_db_invalidates_cached_properties
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("boards", "0075_alter_image_attribution_alter_post_identity_hash_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Export",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to=boards.utils.get_export_upload_path),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "board",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exports",
                        to="boards.board",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
                "indexes": [
                    django.contrib.postgres.indexes.BrinIndex(
                        autosummarize=True,
                        fields=["created_at"],
                        name="boards_expo_created_6d2ffc_brin",
                    )
                ],
            },
            bases=(
                jotlet.mixins.refresh_from_db_invalidates_cached_properties.InvalidateCachedPropertiesMixin,
                models.Model,
            ),
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
